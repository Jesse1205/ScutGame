//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProxyServer.com.scutgame.dir {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dir.scutgame.com/", ConfigurationName="com.scutgame.dir.DirServiceSoap")]
    public interface DirServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetOfficialGame", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        GameInfo[] GetOfficialGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetGameObj", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        ProxyServer.com.scutgame.dir.GameInfo GetGameObj(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetGame", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        GameInfo[] GetGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetGameInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        ProxyServer.com.scutgame.dir.GameInfo GetGameInfo(int gameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/AddGame", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void AddGame(int gameID, string gameName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/AddGameNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void AddGameNew(int gameID, string gameName, string currency, decimal multiple, string gameWord, string agentsID, bool isRelease, System.DateTime releaseDate, string payStyle, string SocketServer, int SocketPort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/AddServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void AddServer(int gameID, int serverId, string serverName, string serverUrl, string status, string intranetAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/SetServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void SetServer(int serverID, int gameID, string serverName, string serverUrl, string status, int weight, string intranetAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetServerObj", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        ProxyServer.com.scutgame.dir.ServerInfo GetServerObj(int gameID, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetServers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        ServerInfo[] GetServers(int gameID, bool isSort, bool isEnable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetServerList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        ServerInfo[] GetServerList(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetServerSortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        ServerInfo[] GetServerSortList(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/RemoveServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void RemoveServer(int gameID, int serverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/RemoveGame", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void RemoveGame(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/SetActiveNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void SetActiveNum(int serverID, int gameID, int activeNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/ReloadServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        bool ReloadServer(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetGameName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        string GetGameName(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/GetServerName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        string GetServerName(int gameID, int serverID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/SetServerEnableDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void SetServerEnableDate(int gameID, int serverID, System.DateTime enableDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/EnableServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void EnableServer(int gameID, int serverID, bool isEnable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dir.scutgame.com/ServerStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IItemChangeEvent))]
        void ServerStatus(int gameID, int serverID, int Status);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dir.scutgame.com/")]
    public partial class GameInfo : MemoryEntity {
        
        private int idField;
        
        private string nameField;
        
        private string currencyField;
        
        private decimal multipleField;
        
        private string gameWordField;
        
        private string agentsIDField;
        
        private bool isReleaseField;
        
        private System.DateTime releaseDateField;
        
        private string payStyleField;
        
        private string socketServerField;
        
        private int socketPortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
                this.RaisePropertyChanged("Currency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal Multiple {
            get {
                return this.multipleField;
            }
            set {
                this.multipleField = value;
                this.RaisePropertyChanged("Multiple");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string GameWord {
            get {
                return this.gameWordField;
            }
            set {
                this.gameWordField = value;
                this.RaisePropertyChanged("GameWord");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AgentsID {
            get {
                return this.agentsIDField;
            }
            set {
                this.agentsIDField = value;
                this.RaisePropertyChanged("AgentsID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsRelease {
            get {
                return this.isReleaseField;
            }
            set {
                this.isReleaseField = value;
                this.RaisePropertyChanged("IsRelease");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime ReleaseDate {
            get {
                return this.releaseDateField;
            }
            set {
                this.releaseDateField = value;
                this.RaisePropertyChanged("ReleaseDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string PayStyle {
            get {
                return this.payStyleField;
            }
            set {
                this.payStyleField = value;
                this.RaisePropertyChanged("PayStyle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string SocketServer {
            get {
                return this.socketServerField;
            }
            set {
                this.socketServerField = value;
                this.RaisePropertyChanged("SocketServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int SocketPort {
            get {
                return this.socketPortField;
            }
            set {
                this.socketPortField = value;
                this.RaisePropertyChanged("SocketPort");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServerInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GameInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dir.scutgame.com/")]
    public partial class MemoryEntity : EntityChangeEvent {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemoryEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServerInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GameInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dir.scutgame.com/")]
    public partial class EntityChangeEvent : IItemChangeEvent {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityChangeEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemoryEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServerInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GameInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dir.scutgame.com/")]
    public abstract partial class IItemChangeEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dir.scutgame.com/")]
    public partial class ServerInfo : MemoryEntity {
        
        private int idField;
        
        private int gameIDField;
        
        private string serverNameField;
        
        private string serverUrlField;
        
        private string intranetAddressField;
        
        private string statusField;
        
        private int activeNumField;
        
        private int weightField;
        
        private int targetServerField;
        
        private bool isEnableField;
        
        private System.DateTime enableDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int GameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
                this.RaisePropertyChanged("GameID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ServerName {
            get {
                return this.serverNameField;
            }
            set {
                this.serverNameField = value;
                this.RaisePropertyChanged("ServerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ServerUrl {
            get {
                return this.serverUrlField;
            }
            set {
                this.serverUrlField = value;
                this.RaisePropertyChanged("ServerUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string IntranetAddress {
            get {
                return this.intranetAddressField;
            }
            set {
                this.intranetAddressField = value;
                this.RaisePropertyChanged("IntranetAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int ActiveNum {
            get {
                return this.activeNumField;
            }
            set {
                this.activeNumField = value;
                this.RaisePropertyChanged("ActiveNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
                this.RaisePropertyChanged("Weight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int TargetServer {
            get {
                return this.targetServerField;
            }
            set {
                this.targetServerField = value;
                this.RaisePropertyChanged("TargetServer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsEnable {
            get {
                return this.isEnableField;
            }
            set {
                this.isEnableField = value;
                this.RaisePropertyChanged("IsEnable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime EnableDate {
            get {
                return this.enableDateField;
            }
            set {
                this.enableDateField = value;
                this.RaisePropertyChanged("EnableDate");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DirServiceSoapChannel : ProxyServer.com.scutgame.dir.DirServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirServiceSoapClient : System.ServiceModel.ClientBase<ProxyServer.com.scutgame.dir.DirServiceSoap>, ProxyServer.com.scutgame.dir.DirServiceSoap {
        
        public DirServiceSoapClient() {
        }
        
        public DirServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DirServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GameInfo[] GetOfficialGame() {
            return base.Channel.GetOfficialGame();
        }
        
        public ProxyServer.com.scutgame.dir.GameInfo GetGameObj(int gameID) {
            return base.Channel.GetGameObj(gameID);
        }
        
        public GameInfo[] GetGame() {
            return base.Channel.GetGame();
        }
        
        public ProxyServer.com.scutgame.dir.GameInfo GetGameInfo(int gameId) {
            return base.Channel.GetGameInfo(gameId);
        }
        
        public void AddGame(int gameID, string gameName) {
            base.Channel.AddGame(gameID, gameName);
        }
        
        public void AddGameNew(int gameID, string gameName, string currency, decimal multiple, string gameWord, string agentsID, bool isRelease, System.DateTime releaseDate, string payStyle, string SocketServer, int SocketPort) {
            base.Channel.AddGameNew(gameID, gameName, currency, multiple, gameWord, agentsID, isRelease, releaseDate, payStyle, SocketServer, SocketPort);
        }
        
        public void AddServer(int gameID, int serverId, string serverName, string serverUrl, string status, string intranetAddress) {
            base.Channel.AddServer(gameID, serverId, serverName, serverUrl, status, intranetAddress);
        }
        
        public void SetServer(int serverID, int gameID, string serverName, string serverUrl, string status, int weight, string intranetAddress) {
            base.Channel.SetServer(serverID, gameID, serverName, serverUrl, status, weight, intranetAddress);
        }
        
        public ProxyServer.com.scutgame.dir.ServerInfo GetServerObj(int gameID, int serverId) {
            return base.Channel.GetServerObj(gameID, serverId);
        }
        
        public ServerInfo[] GetServers(int gameID, bool isSort, bool isEnable) {
            return base.Channel.GetServers(gameID, isSort, isEnable);
        }
        
        public ServerInfo[] GetServerList(int gameID) {
            return base.Channel.GetServerList(gameID);
        }
        
        public ServerInfo[] GetServerSortList(int gameID) {
            return base.Channel.GetServerSortList(gameID);
        }
        
        public void RemoveServer(int gameID, int serverID) {
            base.Channel.RemoveServer(gameID, serverID);
        }
        
        public void RemoveGame(int gameID) {
            base.Channel.RemoveGame(gameID);
        }
        
        public void SetActiveNum(int serverID, int gameID, int activeNum) {
            base.Channel.SetActiveNum(serverID, gameID, activeNum);
        }
        
        public bool ReloadServer(int gameID) {
            return base.Channel.ReloadServer(gameID);
        }
        
        public string GetGameName(int gameID) {
            return base.Channel.GetGameName(gameID);
        }
        
        public string GetServerName(int gameID, int serverID) {
            return base.Channel.GetServerName(gameID, serverID);
        }
        
        public void SetServerEnableDate(int gameID, int serverID, System.DateTime enableDate) {
            base.Channel.SetServerEnableDate(gameID, serverID, enableDate);
        }
        
        public void EnableServer(int gameID, int serverID, bool isEnable) {
            base.Channel.EnableServer(gameID, serverID, isEnable);
        }
        
        public void ServerStatus(int gameID, int serverID, int Status) {
            base.Channel.ServerStatus(gameID, serverID, Status);
        }
    }
}
